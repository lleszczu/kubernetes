#cloud-config

hostname: ${name}

ssh_authorized_keys:
${ssh_keys}

write_files:
  - path: /etc/systemd/journald.conf
    permissions: 0644
    content: |
      [Journal]
      SystemMaxUse=50M
      RuntimeMaxUse=50M

coreos:
  etcd2:
    advertise-client-urls: http://${public_ip}:2379
    initial-advertise-peer-urls: http://${public_ip}:2380
    listen-client-urls: http://0.0.0.0:2379
    listen-peer-urls: http://${public_ip}:2380
    initial-cluster-state: new
    initial-cluster: ${etcd2_initial_cluster}
  flannel:
    interface: eth1
  units:
    - name: static.network
      command: start
      content: |
        [Match]
        # Name=eth0
        MACAddress=52:54:00:00:00:${i}

        [Network]
        Address=${public_ip}/24
        DNS=192.168.10.254
        Gateway=192.168.10.254

    - name: static-eth1.network
      command: start
      content: |
        [Match]
        Name=eth1
        [Network]
        Address=${private_ip}/24

    - name: early-docker.service
      command: start

    - name: flanneld.service
      command: start
      drop-ins:
        - name: configure-flanneld.conf
          content: |
            [Unit]
            Requires=etcd2.service
            After=etcd2.service
            [Service]
            ExecStartPre=/usr/bin/bash -c 'until curl http://127.0.0.1:2379/v2/machines; do sleep 1; done; curl -X PUT -d \'value={\"Network\":\"10.10.0.0/16\",\"Backend\": {\"Type\": \"vxlan\",\"VNI\":2}}\' \"http://127.0.0.1:2379/v2/keys/coreos.com/network/config?prevExist=false\"'


    - name: etcd2.service
      command: start
      drop-ins:
        - name: 10-override-name.conf
          content: |
            [Service]
            Environment=ETCD_NAME=%H
    - name: docker.service
      command: start
      drop-ins:
        - name: 50-opts.conf
          content: |
            [Service]
            $(
[[ "${NETWORK_PROVIDER}" != "flanneld" ]] && cat << DOCKER_CONFIG

            Environment='DOCKER_OPTS=--bridge=cbr0 --iptables=false'

DOCKER_CONFIG

[[ "${NETWORK_PROVIDER}" == "flanneld" ]] && cat << DOCKER_CONFIG

            EnvironmentFile=-/run/flannel_docker_opts.env
            [Unit]
            Requires=flanneld.service
            After=flanneld.service

DOCKER_CONFIG
)
    - name: docker-tcp.socket
      command: start
      enable: yes
      content: |
        [Unit]
        Description=Docker Socket for the API

        [Socket]
        ListenStream=2375
        BindIPv6Only=both
        Service=docker.service

        [Install]
        WantedBy=sockets.target

    - name: opt-kubernetes.mount
      command: start
      content: |
        [Unit]
        ConditionVirtualization=|vm

        [Mount]
        What=kubernetes
        Where=/opt/kubernetes
        Options=ro,trans=virtio,version=9p2000.L
        Type=9p
  update:
    group: ${COREOS_CHANNEL:-alpha}
    reboot-strategy: off

$( [[ ${type} =~ "master" ]] && render-template "$ROOT/user_data_master.yml" )
$( [[ ${type} =~ "minion" ]] && render-template "$ROOT/user_data_minion.yml" )
